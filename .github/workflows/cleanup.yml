name: Clean up 

on: 
  workflow_dispatch:
  # push:
  schedule:
    - cron:  '04 2 * * *'

jobs:

  # cleanup-artifactory:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Cleanup nightly builds on Zowe Artifactory
  #       run: |
  #         cd artifactory-tools
  #         ./clean-nightly.sh -a ${pipeline.artifactory.CLI_CONFIG_NAME}

  #     - name: Cleanup snapshots on Zowe Artifactory
  #       run: |
  #         cd artifactory-tools
  #         ./clean-snapshots.sh -a ${pipeline.artifactory.CLI_CONFIG_NAME}

  cleanup-zos:
    strategy:
      matrix:
        servers:
          - {"name": "zzow02", "host": "SSH_MARIST_ACF2_HOST", "password": "SSH_MARIST_ACF2_PASSWORD"}
          - {"name": "zzow03", "host": "SSH_MARIST_TSS_HOST", "password": "SSH_MARIST_TSS_PASSWORD"}
          - {"name": "zzow04", "host": "SSH_MARIST_RACF_HOST", "password": "SSH_MARIST_RACF_PASSWORD"}
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cleanup z/OS systems
        run: |
          echo "Clean up ${{ matrix.servers.name }}"
          
          sshpass -p "${ssh_password}" scp -P ${ssh_port} -o StrictHostKeyChecking=no -o PubkeyAuthentication=no scripts/cleanup-zos.sh ${ssh_user}@${ssh_host}:/tmp/cleanup-zos.sh

          SSHPASS=${ssh_password} sshpass -e ssh -tt -o StrictHostKeyChecking=no -o PubkeyAuthentication=no -p ${ssh_port} ${ssh_user}@${ssh_host} << EOF
          cd /tmp && chmod +x cleanup-zos.sh && ./cleanup-zos.sh
          echo "done" && exit 0
          EOF
        env:
          ssh_host: ${{ secrets[matrix.servers.host] }}
          ssh_port: 22
          ssh_user: ${{ secrets.SSH_MARIST_USERNAME }}
          ssh_password: ${{ secrets[matrix.servers.password] }}


  # cleanup-loz:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
