#!groovy

/**
 * This program and the accompanying materials are made available under the terms of the
 * Eclipse Public License v2.0 which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-v20.html
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Copyright IBM Corporation 2020
 */

def PROJECT_ROOT_PATH = 'performance/server'

node('ibm-jenkins-slave-nvm') {
  def lib = library("jenkins-library").org.zowe.jenkins_shared_library

  def pipeline = lib.pipelines.generic.GenericPipeline.new(this)

  pipeline.admins.add("jackjia")

  pipeline.setup(
    packageName: 'org.zowe.metrics-server',
    extraInit: {
      dir(PROJECT_ROOT_PATH) {
        // get current version, which is required by uploading artifacts
        def npm = lib.npm.Registry.new(this)
        def packageInfo = npm.getPackageInfo()
        pipeline.setVersion(packageInfo['version'])
      }
    }
  )

  // we have a custom build command
  pipeline.build(
    operation: {
      ansiColor('xterm') {
        dir(PROJECT_ROOT_PATH) {
          sh "npm install && npm run build"
        }
      }
    }
  )

  pipeline.createStage(
    name          : "Lint",
    isSkippable   : true,
    stage         : {
      ansiColor('xterm') {
        dir(PROJECT_ROOT_PATH) {
          sh "npm run lint"
        }
      }
    },
    timeout: [time: 2, unit: 'MINUTES']
  )

  pipeline.test(
    name          : 'Unit',
    operation     : {
      ansiColor('xterm') {
        dir(PROJECT_ROOT_PATH) {
          sh 'npm run test'
        }
      }
    },
    allowMissingJunit: true
  )

  // we have pax packaging step
  pipeline.packaging(
    name             : 'zowe-metrics-server',
    localWorkspace   : "${PROJECT_ROOT_PATH}/.pax",
    keepTempFolder   : false
  )

  // define we need publish stage
  pipeline.publish(
    artifacts: [
      "${PROJECT_ROOT_PATH}/.pax/zowe-metrics-server.pax"
    ]
  )

  // define we need release stage
  pipeline.release()

  pipeline.end()
}
